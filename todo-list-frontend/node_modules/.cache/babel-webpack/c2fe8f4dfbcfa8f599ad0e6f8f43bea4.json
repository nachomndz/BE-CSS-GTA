{"ast":null,"code":"import { map } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./todo.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"./progress-bar/progress-bar.component\";\nimport * as i4 from \"./todo-item/todo-item.component\";\n\nfunction AppComponent_app_progress_bar_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"app-progress-bar\");\n  }\n}\n\nfunction AppComponent_app_todo_item_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"app-todo-item\", 7);\n  }\n\n  if (rf & 2) {\n    const todo_r3 = ctx.$implicit;\n    i0.ɵɵproperty(\"item\", todo_r3);\n  }\n}\n\nexport class AppComponent {\n  constructor(todoService) {\n    this.showProgressBar = true;\n    this.filterText = '';\n    this.todos$ = todoService.getAll().pipe(map(todos => todos.filter(todo => todo.task.includes(this.filterText))));\n    this.todos$.subscribe(() => this.showProgressBar = false);\n  }\n\n  changeFilter(text) {}\n\n}\n\nAppComponent.ɵfac = function AppComponent_Factory(t) {\n  return new (t || AppComponent)(i0.ɵɵdirectiveInject(i1.TodoService));\n};\n\nAppComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: AppComponent,\n  selectors: [[\"app-root\"]],\n  decls: 11,\n  vars: 4,\n  consts: [[1, \"title\"], [1, \"list\"], [\"for\", \"search\"], [\"id\", \"search\", \"type\", \"text\", 3, \"change\"], [\"inputSearch\", \"\"], [4, \"ngIf\"], [3, \"item\", 4, \"ngFor\", \"ngForOf\"], [3, \"item\"]],\n  template: function AppComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      const _r4 = i0.ɵɵgetCurrentView();\n\n      i0.ɵɵelementStart(0, \"div\", 0);\n      i0.ɵɵelementStart(1, \"h1\");\n      i0.ɵɵtext(2, \" A list of TODOs \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"div\", 1);\n      i0.ɵɵelementStart(4, \"label\", 2);\n      i0.ɵɵtext(5, \"Search...\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(6, \"input\", 3, 4);\n      i0.ɵɵlistener(\"change\", function AppComponent_Template_input_change_6_listener() {\n        i0.ɵɵrestoreView(_r4);\n\n        const _r0 = i0.ɵɵreference(7);\n\n        return ctx.changeFilter(_r0.value);\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(8, AppComponent_app_progress_bar_8_Template, 1, 0, \"app-progress-bar\", 5);\n      i0.ɵɵtemplate(9, AppComponent_app_todo_item_9_Template, 1, 1, \"app-todo-item\", 6);\n      i0.ɵɵpipe(10, \"async\");\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵadvance(8);\n      i0.ɵɵproperty(\"ngIf\", ctx.showProgressBar);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind1(10, 2, ctx.todos$));\n    }\n  },\n  directives: [i2.NgIf, i2.NgForOf, i3.ProgressBarComponent, i4.TodoItemComponent],\n  pipes: [i2.AsyncPipe],\n  styles: [\".title[_ngcontent-%COMP%] {\\n  text-align: center;\\n}\\n\\n.list[_ngcontent-%COMP%] {\\n  width: 1000px;\\n  margin: auto;\\n}\\n\\ninput[type=text][_ngcontent-%COMP%] {\\n  width: 100%;\\n  padding: 12px 20px;\\n  margin: 8px 0 0;\\n  box-sizing: border-box;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwcC5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLGtCQUFBO0FBQ0Y7O0FBRUE7RUFDRSxhQUFBO0VBQ0EsWUFBQTtBQUNGOztBQUVBO0VBQ0UsV0FBQTtFQUNBLGtCQUFBO0VBQ0EsZUFBQTtFQUNBLHNCQUFBO0FBQ0YiLCJmaWxlIjoiYXBwLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLnRpdGxlIHtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xufVxuXG4ubGlzdCB7XG4gIHdpZHRoOiAxMDAwcHg7XG4gIG1hcmdpbjogYXV0bztcbn1cblxuaW5wdXRbdHlwZT10ZXh0XSB7XG4gIHdpZHRoOiAxMDAlO1xuICBwYWRkaW5nOiAxMnB4IDIwcHg7XG4gIG1hcmdpbjogOHB4IDAgMDtcbiAgYm94LXNpemluZzogYm9yZGVyLWJveDtcbn1cbiJdfQ== */\"]\n});","map":{"version":3,"sources":["/home/santi/Temporal/todo-list/todo-list-frontend/src/app/app.component.ts"],"names":[],"mappings":"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","sourcesContent":["import {Component} from '@angular/core';\nimport {Todo, TodoService} from \"./todo.service\";\nimport {Observable} from \"rxjs\";\nimport { filter, map } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-root',\n  template: `\n    <div class=\"title\">\n      <h1>\n        A list of TODOs\n      </h1>\n    </div>\n    <div class=\"list\">\n      <label for=\"search\">Search...</label>\n      <input #inputSearch id=\"search\" type=\"text\" (change)=\"changeFilter(inputSearch.value)\">\n      <app-progress-bar *ngIf=\"showProgressBar\"></app-progress-bar>\n      <app-todo-item *ngFor=\"let todo of todos$ | async\" [item]=\"todo\"></app-todo-item>\n    </div>\n  `,\n  styleUrls: ['app.component.scss']\n})\nexport class AppComponent {\n\n  readonly todos$: Observable<Todo[]>;\n  showProgressBar: boolean = true;\n  filterText: string = '';\n\n  constructor(todoService: TodoService) {\n    this.todos$ = todoService.getAll().pipe(\n      map(todos => todos.filter(todo => todo.task.includes(this.filterText))\n    );\n    this.todos$.subscribe(() => this.showProgressBar = false)\n  }\n\n  changeFilter(text: string){\n\n  }\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}